// src/components/Sidebar/Sidebar.tsx
import React from "react";
import { motion, AnimatePresence } from "framer-motion";
import {
  Folder,
  FileText,
  Package,
  BarChart,
  Settings,
  BookOpen,
} from "lucide-react";
import { Link } from "react-router-dom";

interface SidebarProps {
  activeIndex: number | null;
  setActiveIndex: (index: number | null) => void;
  submenuRefs: React.MutableRefObject<(HTMLDivElement | null)[]>;
}

const menuItems = [
  {
    label: "–ü—Ä–æ–µ–∫—Ç—ã",
    icon: <Folder size={18} />,
    submenu: [
      { name: "–°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç", path: "/–ø—Ä–æ–µ–∫—Ç—ã/—Å–æ–∑–¥–∞—Ç—å" },
      { name: "–°–ø–∏—Å–æ–∫ –ø—Ä–æ–µ–∫—Ç–æ–≤", path: "/–ø—Ä–æ–µ–∫—Ç—ã/—Å–ø–∏—Å–æ–∫" },
    ],
  },
  {
    label: "–ï–¥–∏–Ω–∏—á–Ω—ã–µ —Ä–∞—Å—Ü–µ–Ω–∫–∏",
    icon: <FileText size={18} />,
    submenu: [
      { name: "–ö–∞—Ç–∞–ª–æ–≥ –ï–†", path: "/–µ–¥–∏–Ω–∏—á–Ω—ã–µ-—Ä–∞—Å—Ü–µ–Ω–∫–∏/–∫–∞—Ç–∞–ª–æ–≥" },
      { name: "–≠–∫—Å–ø–µ—Ä—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞", path: "/–µ–¥–∏–Ω–∏—á–Ω—ã–µ-—Ä–∞—Å—Ü–µ–Ω–∫–∏/—ç–∫—Å–ø–µ—Ä—Ç–Ω–∞—è-–≥—Ä—É–ø–ø–∞" },
      { name: "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ü–µ–Ω", path: "/–µ–¥–∏–Ω–∏—á–Ω—ã–µ-—Ä–∞—Å—Ü–µ–Ω–∫–∏/–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" },
    ],
  },
  {
    label: "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏",
    icon: <Folder size={18} />,
    submenu: [
      { name: "–¶–µ–Ω–æ–≤—ã–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏", path: "/—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏/—Ü–µ–Ω–æ–≤—ã–µ" },
      { name: "–ü—Ä–æ–µ–∫—Ç–Ω—ã–µ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏", path: "/—Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–∏/–ø—Ä–æ–µ–∫—Ç–Ω—ã–µ" },
    ],
  },
  {
    label: "–í–ú–¢–†",
    icon: <Package size={18} />,
    submenu: [
      { name: "–†–µ–µ—Å—Ç—Ä –í–ú–¢–†", path: "/–≤–º—Ç—Ä/—Ä–µ–µ—Å—Ç—Ä" },
      { name: "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã", path: "/–≤–º—Ç—Ä/–∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω—ã–µ-—ç–ª–µ–º–µ–Ω—Ç—ã" },
    ],
  },
  {
    label: "–î–∞—à–±–æ—Ä–¥—ã",
    icon: <BarChart size={18} />,
    submenu: [
      { name: "–û–±—â–∏–π", path: "/–¥–∞—à–±–æ—Ä–¥—ã/–æ–±—â–∏–π" },
      { name: "–ü–æ –ø—Ä–æ–µ–∫—Ç–∞–º", path: "/–¥–∞—à–±–æ—Ä–¥—ã/–ø–æ-–ø—Ä–æ–µ–∫—Ç–∞–º" },
    ],
  },
  {
    label: "–£—á–µ–±–Ω—ã–π —Ü–µ–Ω—Ç—Ä",
    icon: <BookOpen size={18} />,
    submenu: [
      { name: "–ö—É—Ä—Å—ã", path: "/—É—á–µ–±–Ω—ã–π-—Ü–µ–Ω—Ç—Ä/–∫—É—Ä—Å—ã" },
      { name: "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", path: "/—É—á–µ–±–Ω—ã–π-—Ü–µ–Ω—Ç—Ä/–¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è" },
    ],
  },
  {
    label: "–ù–∞—Å—Ç—Ä–æ–π–∫–∏",
    icon: <Settings size={18} />,
    submenu: [
      { name: "–ü—Ä–æ—Ñ–∏–ª—å", path: "/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–ø—Ä–æ—Ñ–∏–ª—å" },
      { name: "–ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞", path: "/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–ø—Ä–∞–≤–∞-–¥–æ—Å—Ç—É–ø–∞" },
      { name: "–ö–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è", path: "/–Ω–∞—Å—Ç—Ä–æ–π–∫–∏/–∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è" }, // üëà –Ω–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
    ],
  },
];

const Sidebar: React.FC<SidebarProps> = ({ activeIndex, setActiveIndex, submenuRefs }) => {
  const setRef = (idx: number) => (el: HTMLDivElement | null) => {
    submenuRefs.current[idx] = el;
  };

  return (
    <aside className="w-[40px] bg-gray-900 flex flex-col justify-between items-center py-4">
      <div className="flex flex-col items-center space-y-5">
        {menuItems.map((item, idx) => (
          <div key={idx} className="relative group">
            <button
              className={`w-8 h-8 bg-gray-800 text-white flex items-center justify-center rounded-full shadow-md hover:bg-gray-700 transition duration-300 ${
                activeIndex === idx ? "ring-2 ring-white" : ""
              }`}
              onClick={(e) => {
                e.stopPropagation();
                setActiveIndex(activeIndex === idx ? null : idx);
              }}
            >
              {item.icon}
            </button>
            <AnimatePresence>
              {activeIndex === idx && (
                <motion.div
                  ref={setRef(idx)}
                  initial={{ scale: 0.8, opacity: 0, y: 10 }}
                  animate={{ scale: 1, opacity: 1, y: 0 }}
                  exit={{ scale: 0.8, opacity: 0, y: 10 }}
                  transition={{ duration: 0.2 }}
                  className="absolute left-full top-0 ml-3 bg-white shadow-xl rounded px-3 py-2 z-10 w-[250px] origin-left"
                >
                  <div className="absolute left-[-8px] top-[9px] w-0 h-0 border-t-8 border-b-8 border-r-8 border-transparent border-r-white" />
                  <div className="text-xs font-semibold text-gray-700 mb-2 border-b border-gray-200 pb-1">
                    {item.label}
                  </div>
                  <ul className="space-y-1">
                    {item.submenu.map((subItem, subIdx) => (
                      <li key={subIdx}>
                        <Link
                          to={subItem.path}
                          className="block text-gray-700 hover:bg-gray-100 px-2 py-1 rounded"
                          onClick={() => setActiveIndex(null)}
                        >
                          {subItem.name}
                        </Link>
                      </li>
                    ))}
                  </ul>
                </motion.div>
              )}
            </AnimatePresence>
          </div>
        ))}
      </div>
    </aside>
  );
};

export default Sidebar;


